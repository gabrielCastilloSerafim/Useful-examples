//
//  ViewController.swift
//  Expand Text Example
//
//  Created by Gabriel Castillo Serafim on 27/12/22.
//

import UIKit

//Adopt the CustomTableCellDelegate to implement method that enables communication between customCell and tableView
class ViewController: UIViewController, UITableViewDataSource, CustomTableCellDelegate {
    
    private let tableView = UITableView()

    override func viewDidLoad() {
        super.viewDidLoad()
        
        setupView()
    }

    private func setupView() {
        
        view.backgroundColor = .white
        view.addSubview(tableView)
        
        tableView.dataSource = self
        tableView.register(CustomTableViewCell.self, forCellReuseIdentifier: "cell")
        //Very important step is to set this 2 tableView properties in oder to enable the tableView row hight resize
        tableView.rowHeight = UITableView.automaticDimension
        //Adding this property is optional, we can use the automatic size generated by the system using the constraints
        tableView.estimatedRowHeight = 100
        //
        tableView.translatesAutoresizingMaskIntoConstraints = false
        
        NSLayoutConstraint.activate([
            tableView.topAnchor.constraint(equalTo: view.safeAreaLayoutGuide.topAnchor),
            tableView.leftAnchor.constraint(equalTo: view.leftAnchor),
            tableView.rightAnchor.constraint(equalTo: view.rightAnchor),
            tableView.bottomAnchor.constraint(equalTo: view.bottomAnchor)
        ])
    }
    
    //This method is called by the cell thru the CustomCellDelegate protocol to update the tableView's row height when the expand button in pressed
    func moreButtonTapped() {
        
        tableView.beginUpdates()
        tableView.endUpdates()
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 30
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let cell = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath) as! CustomTableViewCell
        
        //Set the custom's cell delegate property to be this view controller
        cell.delegate = self
        
        return cell
    }
    
}

